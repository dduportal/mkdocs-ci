name: Python package

on: 
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master

jobs:
  build_documentation:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.MKDOCS_CI }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Mkdocs and dependencies for documentation
      run: |
        python --version
        python -m pip install --upgrade pip
        python -m pip install 'mkdocs >= 1.0.4, < 2' mkdocs-material
    - name: Generate documentation
      run: |
        mkdocs build --clean
#        git config --global user.email "fannyvignolles@gmail.com"
#        git config --global user.name "fvgls"
#        git status
#        git checkout -b docs
#        git pull origin docs
#        git add .
#        git commit -m "Generating docs"
#        git push origin docs
    - uses: actions/upload-artifact@v1
      if: success()
      with:
        name: documentation
        path: site
    - name: Install Tox and dependencies for build
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements/project.txt
        pip install tox
    - name: Build with tox
      run: |
        tox --notest --sdistonly

        
  tests-running:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.5, 3.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./requirements/project.txt
    - name: Test with tox
      run: |
        pip install codecov
        pip install tox
        tox -e test
        
  deploy:
    needs: [build_documentation]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v1
      with:
        name: documentation
    - name: Verify dowloading artifact
      run: |
        pwd
        ls
#        ls site
    - name: Deploy
      run: echo "pouet"
        
